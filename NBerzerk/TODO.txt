* Use GameObjects like here:

	http://www.dreamincode.net/forums/topic/180069-xna-2d-bounding-box-collision-detection/

  for everything - this should then allow collision detection without actually having a proper pixel buffer.

* Look into using SharpDX.Toolkit's high level game API - is this only for 3d or will it work for 2d too? Note this is not cross platform.

* Create custom font (ttf) and use DirectWrite to draw text. See example in SharpDX:

	https://code.google.com/p/sharpdx/source/browse/Samples/DirectWrite/?r=7df82ec58c8b7706300f3dd1e5f6b5a4c2ffd335#DirectWrite%2FCustomFont

  hmm - maybe need to use spritefont instead, see here:

   https://code.google.com/p/sharpdx/source/browse/Samples/Toolkit/SpriteBatchAndFont/SpriteBatchAndFontGame.cs?r=0bbba8530ce07845d296653d675c597adc08e70a

  See here for bitmap font format:

   http://directxtk.codeplex.com/wikipage?title=MakeSpriteFont&referringTitle=SpriteFont

  I think I need to redo font.png into this format

* Create class for main game objects, e.g. player, room, robots, etc... and refactor existing code into these classes. Classes will need a 
  Render method, maybe an Update method too?? Main game will just delegate to these objects to Render/Update.

* Learn what the heck WIC is in directX.

* Is there going to be a lot of changes when next release of SharpDX is released, e.g. DrawingPoint class is renamed as Point etc...

* Need to work out how input works in DX

* Need to work out how to do pixel based collision detection

* Is it possible to write unit tests for directx code?? See here for possible option:

     http://sharpdx.org/forum/5-api-usage/3221-toolkit-win8-desktop#3279

* Room dimensions:

	Top left wall:		(4, 0) - (103, 3)
	Top right wall:		(152, 0) - (251, 3)
	Bottom left wall:	(4, 204) - (103, 207)
	Bottom right wall:	(152, 204) - (251, 207)

	Left top wall:		(4, 0) - (7, 71)
	Left bottom wall:	(4, 136) - (7, 207)
	Right top wall:		(248, 0) - (251, 71)
	Right bottom wall:	(248, 136) - (251, 107)

	Pillars:

		Top row (left to right)
	
			Pillar 1:		(56, 68) - (59, 71)
			Pillar 2:		(104, 68) - (107, 71)
			Pillar 3:		(152, 68) - (155, 71)
			Pillar 4:		(200, 68) - (203, 71)

		Bottom row (left to right)

			Pillar 5:		(56, 136) - (59, 139)
			Pillar 6:		(104, 136) - (107, 139)
			Pillar 7:		(152, 136) - (155, 139)
			Pillar 8:		(200, 136) - (203, 139)

		Drawing north from pillar includes starting pillar & ending pillar
		Drawing south from pillar includes starting pillar & ending pillar
		Drawing east from pillar does not include starting pillar
		Drawing west from pillar includes starting pillar & ending pillar